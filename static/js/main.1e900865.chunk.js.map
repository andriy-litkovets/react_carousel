{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentItemIndex","handlerButton","step","props","images","frameSize","lastItemIndex","length","nextItemIndex","setState","this","itemWidth","animationDuration","infinity","className","style","width","transition","map","el","index","transform","src","alt","type","disabled","onClick","React","Component","App","htmlFor","id","value","min","max","onChange","event","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e900865.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinity: boolean,\n};\n\ntype State = {\n  currentItemIndex: number,\n};\n\nexport class Carousel extends React.Component <Props, State> {\n  state = {\n    currentItemIndex: 0,\n  };\n\n  handlerButton = (step: number) => () => {\n    const { images, frameSize } = this.props;\n    const { currentItemIndex } = this.state;\n    const firstItemIndex = 0;\n    const lastItemIndex = images.length - frameSize;\n    let nextItemIndex = currentItemIndex + step;\n\n    if (step > 0) {\n      if (currentItemIndex === lastItemIndex) {\n        nextItemIndex = firstItemIndex;\n      } else if (nextItemIndex > lastItemIndex) {\n        nextItemIndex = lastItemIndex;\n      }\n    }\n\n    if (step < 0) {\n      if (currentItemIndex === firstItemIndex) {\n        nextItemIndex = lastItemIndex;\n      } else if (nextItemIndex < firstItemIndex) {\n        nextItemIndex = firstItemIndex;\n      }\n    }\n\n    this.setState(() => ({\n      currentItemIndex: nextItemIndex,\n    }));\n  };\n\n  render() {\n    const { currentItemIndex } = this.state;\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinity,\n    } = this.props;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {\n            images.map((el, index) => {\n              return (\n                <li\n                  className=\"Carousel__item\"\n                  key={el}\n                  style={{\n                    transform: `translateX(${-currentItemIndex * itemWidth}px)`,\n                    transition: `${animationDuration}ms`,\n                  }}\n                >\n                  <img\n                    src={el}\n                    alt={`icon-${index + 1}`}\n                    width={itemWidth}\n                  />\n                </li>\n              );\n            })\n          }\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            className=\"Carousel__button\"\n            type=\"button\"\n            disabled={currentItemIndex <= 0 && !infinity}\n            onClick={this.handlerButton(-step)}\n          >\n            Prev\n          </button>\n\n          <button\n            className=\"Carousel__button\"\n            data-cy=\"next\"\n            type=\"button\"\n            disabled={\n              currentItemIndex >= images.length - frameSize\n              && !infinity\n            }\n            onClick={this.handlerButton(step)}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinity: boolean,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinity: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinity,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\" data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinity={infinity}\n        />\n        <div className=\"App__labels\">\n          <label\n            htmlFor=\"stepId\"\n            className=\"App__label\"\n          >\n            Step:\n            <input\n              type=\"number\"\n              id=\"stepId\"\n              value={step}\n              min={1}\n              max={images.length}\n              step={1}\n              onChange={(event) => {\n                this.setState({\n                  step: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"frameId\"\n            className=\"App__label\"\n          >\n            Frame size:\n            <input\n              type=\"number\"\n              id=\"frameId\"\n              value={frameSize}\n              min={1}\n              max={images.length}\n              step={1}\n              onChange={(event) => {\n                this.setState({\n                  frameSize: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"itemId\"\n            className=\"App__label\"\n          >\n            Item width:\n            <input\n              type=\"number\"\n              id=\"itemId\"\n              value={itemWidth}\n              min={130}\n              max={260}\n              step={10}\n              onChange={(event) => {\n                this.setState({\n                  itemWidth: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"animationId\"\n            className=\"App__label\"\n          >\n            Animation:\n            <input\n              type=\"number\"\n              id=\"animationId\"\n              value={animationDuration}\n              min={1000}\n              max={5000}\n              step={200}\n              onChange={(event) => {\n                this.setState({\n                  animationDuration: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"infinityId\"\n            className=\"App__label\"\n          >\n            Infinity:\n            <input\n              type=\"checkbox\"\n              id=\"infinityId\"\n              onChange={(event) => {\n                this.setState({\n                  infinity: event.target.checked,\n                });\n              }}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}